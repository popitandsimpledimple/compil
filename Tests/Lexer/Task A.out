1	1	Keyword	PROGRAM	Program
1	9	Identifier	main	main
1	13	Separator	Semicolom	;
2	1	Keyword	VAR	var
2	5	Identifier	input	input
2	11	Separator	Colon	:
2	13	Keyword	STRING	String
2	19	Separator	Semicolom	;
3	1	Identifier	sign	sign
3	6	Separator	Colon	:
3	8	Identifier	Boolean	Boolean
3	15	Separator	Semicolom	;
5	1	Keyword	FUNCTION	function
5	10	Identifier	toDec	toDec
5	15	Separator	Lparen	(
5	16	Identifier	inp	inp
5	20	Separator	Colon	:
5	22	Keyword	STRING	string
5	28	Separator	Semicolom	;
5	30	Identifier	base	base
5	35	Separator	Colon	:
5	37	Identifier	byte	byte
5	41	Separator	Semicolom	;
5	43	Identifier	sign	sign
5	48	Separator	Colon	:
5	50	Identifier	Boolean	Boolean
5	57	Separator	Rparen	)
5	59	Separator	Colon	:
5	61	Identifier	Int64	Int64
5	66	Separator	Semicolom	;
6	1	Keyword	CONST	const
6	7	Identifier	table	table
6	13	Separator	Colon	:
6	15	Keyword	STRING	string
6	22	Operator	Equal	=
6	24	String	0123456789ABCDEF	'0123456789ABCDEF'
6	42	Separator	Semicolom	;
7	1	Keyword	VAR	var
7	7	Identifier	answer	answer
7	14	Separator	Colon	:
7	16	Identifier	Int64	Int64
7	21	Separator	Semicolom	;
8	7	Identifier	p	p
8	8	Separator	Comma	,
8	10	Identifier	i	i
8	12	Separator	Colon	:
8	14	Identifier	Longint	Longint
8	21	Separator	Semicolom	;
9	1	Keyword	BEGIN	begin
10	5	Identifier	answer	answer
10	12	Operator	Assign	:=
10	15	Integer	0	0
10	16	Separator	Semicolom	;
11	5	Keyword	IF	if
11	8	Separator	Lparen	(
11	9	Identifier	inp	inp
11	13	Operator	Equal	=
11	15	String		''
11	17	Separator	Rparen	)
11	19	Keyword	THEN	then
12	9	Keyword	BEGIN	begin
13	13	Identifier	toDec	toDec
13	19	Operator	Assign	:=
13	22	Integer	1	1
13	23	Separator	Semicolom	;
14	13	Keyword	EXIT	exit
15	9	Keyword	END	end
15	12	Separator	Semicolom	;
16	5	Keyword	FOR	for
16	9	Identifier	i	i
16	10	Operator	Assign	:=
16	13	Integer	1	1
16	15	Keyword	TO	to
16	18	Identifier	length	length
16	24	Separator	Lparen	(
16	25	Identifier	inp	inp
16	28	Separator	Rparen	)
16	30	Keyword	DO	do
17	9	Keyword	BEGIN	begin
18	9	Identifier	p	p
18	11	Operator	Assign	:=
18	14	Identifier	pos	pos
18	17	Separator	Lparen	(
18	18	Identifier	inp	inp
18	21	Separator	Lbrack	[
18	22	Identifier	i	i
18	23	Separator	Rbrack	]
18	24	Separator	Comma	,
18	26	Identifier	table	table
18	31	Separator	Rparen	)
18	32	Separator	Semicolom	;
19	9	Keyword	IF	if
19	12	Identifier	p	p
19	14	Keyword	IN	in
19	17	Separator	Lbrack	[
19	18	Integer	1	1
19	19	Separator	Doubledot	..
19	21	Identifier	base	base
19	25	Separator	Rbrack	]
19	27	Keyword	THEN	then
20	13	Keyword	BEGIN	begin
21	17	Identifier	answer	answer
21	24	Operator	Assign	:=
21	27	Separator	Lparen	(
21	28	Identifier	answer	answer
21	35	Operator	Mul	*
21	37	Identifier	base	base
21	41	Separator	Rparen	)
21	43	Operator	Add	+
21	45	Separator	Lparen	(
21	46	Identifier	p	p
21	48	Operator	Sub	-
21	50	Integer	1	1
21	51	Separator	Rparen	)
21	52	Separator	Semicolom	;
22	17	Keyword	IF	if
22	20	Separator	Lparen	(
22	21	Identifier	sign	sign
22	25	Separator	Rparen	)
22	27	Keyword	THEN	then
22	32	Identifier	answer	answer
22	38	Operator	Assign	:=
22	41	Identifier	answer	answer
22	48	Operator	Mul	*
22	50	Operator	Sub	-
22	51	Integer	1	1
22	52	Separator	Semicolom	;
23	17	Keyword	IF	if
23	20	Separator	Lparen	(
23	21	Separator	Lparen	(
23	22	Identifier	answer	answer
23	29	Operator	More	>
23	31	Integer	2147483647	2147483647
23	41	Separator	Rparen	)
23	43	Keyword	OR	or
23	46	Separator	Lparen	(
23	47	Identifier	answer	answer
23	54	Operator	Less	<
23	56	Operator	Sub	-
23	57	Integer	2147483647	2147483647
23	67	Separator	Rparen	)
23	68	Separator	Rparen	)
23	70	Keyword	THEN	then
24	21	Keyword	BEGIN	begin
25	25	Identifier	toDec	toDec
25	30	Operator	Assign	:=
25	33	Integer	2	2
25	34	Separator	Semicolom	;
26	25	Keyword	EXIT	exit
26	29	Separator	Semicolom	;
27	21	Keyword	END	end
27	24	Separator	Semicolom	;
28	17	Keyword	IF	if
28	20	Separator	Lparen	(
28	21	Identifier	sign	sign
28	25	Separator	Rparen	)
28	27	Keyword	THEN	then
28	32	Identifier	answer	answer
28	38	Operator	Assign	:=
28	41	Identifier	answer	answer
28	48	Operator	Mul	*
28	50	Operator	Sub	-
28	51	Integer	1	1
28	52	Separator	Semicolom	;
29	13	Keyword	END	end
30	13	Keyword	ELSE	else
31	13	Keyword	BEGIN	begin
32	17	Identifier	toDec	toDec
32	22	Operator	Assign	:=
32	25	Integer	1	1
32	26	Separator	Semicolom	;
33	17	Keyword	EXIT	exit
33	21	Separator	Semicolom	;
34	13	Keyword	END	end
34	16	Separator	Semicolom	;
35	9	Keyword	END	end
35	12	Separator	Semicolom	;
36	5	Keyword	WRITELN	WriteLn
36	12	Separator	Lparen	(
36	13	Integer	0	0
36	14	Separator	Rparen	)
36	15	Separator	Semicolom	;
37	5	Keyword	IF	if
37	8	Separator	Lparen	(
37	9	Identifier	sign	sign
37	13	Separator	Rparen	)
37	15	Keyword	THEN	then
38	7	Identifier	toDec	toDec
38	12	Operator	Assign	:=
38	15	Identifier	answer	answer
38	22	Operator	Mul	*
38	24	Operator	Sub	-
38	25	Integer	1	1
39	5	Keyword	ELSE	else
40	7	Identifier	toDec	toDec
40	12	Operator	Assign	:=
40	15	Identifier	answer	answer
40	21	Separator	Semicolom	;
41	1	Keyword	END	end
41	4	Separator	Semicolom	;
43	1	Keyword	BEGIN	begin
44	5	Keyword	READ	Read
44	9	Separator	Lparen	(
44	10	Identifier	input	input
44	15	Separator	Rparen	)
44	16	Separator	Semicolom	;
45	5	Identifier	input	input
45	10	Operator	Assign	:=
45	13	Identifier	UpCase	UpCase
45	19	Separator	Lparen	(
45	20	Identifier	input	input
45	25	Separator	Rparen	)
45	26	Separator	Semicolom	;
46	5	Identifier	sign	sign
46	10	Operator	Assign	:=
46	13	Keyword	FALSE	False
46	18	Separator	Semicolom	;
47	5	Keyword	IF	if
47	8	Separator	Lparen	(
47	9	Identifier	input	input
47	14	Separator	Lbrack	[
47	15	Integer	1	1
47	16	Separator	Rbrack	]
47	18	Operator	Equal	=
47	20	String	-	'-'
47	23	Separator	Rparen	)
47	25	Keyword	THEN	then
48	9	Keyword	BEGIN	begin
49	13	Identifier	Delete	Delete
49	19	Separator	Lparen	(
49	20	Identifier	input	input
49	25	Separator	Comma	,
49	26	Integer	1	1
49	27	Separator	Comma	,
49	28	Integer	1	1
49	29	Separator	Rparen	)
49	30	Separator	Semicolom	;
50	12	Identifier	sign	sign
50	17	Operator	Assign	:=
50	20	Keyword	TRUE	True
50	24	Separator	Semicolom	;
51	9	Keyword	END	end
51	12	Separator	Semicolom	;
52	5	Keyword	CASE	case
52	10	Identifier	input	input
52	15	Separator	Lbrack	[
52	16	Integer	1	1
52	17	Separator	Rbrack	]
52	19	Keyword	OF	of
53	5	String	%	'%'
53	8	Separator	Colon	:
53	10	Keyword	BEGIN	begin
53	16	Identifier	Delete	Delete
53	22	Separator	Lparen	(
53	23	Identifier	input	input
53	28	Separator	Comma	,
53	29	Integer	1	1
53	30	Separator	Comma	,
53	31	Integer	1	1
53	32	Separator	Rparen	)
53	33	Separator	Semicolom	;
53	35	Keyword	WRITE	Write
53	40	Separator	Lparen	(
53	41	Identifier	toDec	toDec
53	46	Separator	Lparen	(
53	47	Identifier	input	input
53	52	Separator	Comma	,
53	54	Integer	2	2
53	55	Separator	Comma	,
53	57	Identifier	sign	sign
53	61	Separator	Rparen	)
53	62	Separator	Rparen	)
53	63	Separator	Semicolom	;
53	65	Keyword	END	end
53	68	Separator	Semicolom	;
54	5	String	$	'$'
54	8	Separator	Colon	:
54	10	Keyword	BEGIN	begin
54	16	Identifier	Delete	Delete
54	22	Separator	Lparen	(
54	23	Identifier	input	input
54	28	Separator	Comma	,
54	29	Integer	1	1
54	30	Separator	Comma	,
54	31	Integer	1	1
54	32	Separator	Rparen	)
54	33	Separator	Semicolom	;
54	35	Keyword	WRITE	Write
54	40	Separator	Lparen	(
54	41	Identifier	toDec	toDec
54	46	Separator	Lparen	(
54	47	Identifier	input	input
54	52	Separator	Comma	,
54	54	Integer	16	16
54	56	Separator	Comma	,
54	58	Identifier	sign	sign
54	62	Separator	Rparen	)
54	63	Separator	Rparen	)
54	64	Separator	Semicolom	;
54	66	Keyword	END	end
54	69	Separator	Semicolom	;
55	5	String	&	'&'
55	8	Separator	Colon	:
55	10	Keyword	BEGIN	begin
55	16	Identifier	Delete	Delete
55	22	Separator	Lparen	(
55	23	Identifier	input	input
55	28	Separator	Comma	,
55	29	Integer	1	1
55	30	Separator	Comma	,
55	31	Integer	1	1
55	32	Separator	Rparen	)
55	33	Separator	Semicolom	;
55	35	Keyword	WRITE	Write
55	40	Separator	Lparen	(
55	41	Identifier	toDec	toDec
55	46	Separator	Lparen	(
55	47	Identifier	input	input
55	52	Separator	Comma	,
55	54	Integer	8	8
55	55	Separator	Comma	,
55	57	Identifier	sign	sign
55	61	Separator	Rparen	)
55	62	Separator	Rparen	)
55	63	Separator	Semicolom	;
55	65	Keyword	END	end
55	68	Separator	Semicolom	;
56	5	Keyword	ELSE	else
57	9	Keyword	WRITE	Write
57	14	Separator	Lparen	(
57	15	Identifier	toDec	toDec
57	20	Separator	Lparen	(
57	21	Identifier	input	input
57	26	Separator	Comma	,
57	28	Integer	10	10
57	30	Separator	Comma	,
57	32	Identifier	sign	sign
57	36	Separator	Rparen	)
57	37	Separator	Rparen	)
57	38	Separator	Semicolom	;
58	5	Keyword	END	end
58	8	Separator	Semicolom	;
59	1	Keyword	END	end
59	4	Separator	Dot	.
